@inject NavigationManager NavigationManager


<nav class="text-sm text-gray-300 mb-4 px-4 py-2">
    <!-- Breadcrumb List -->
    <ol class="flex items-center space-x-2">
        <!-- Home Link -->
        <li>
            <NavLink href="/" class="text-yellow-400 hover:underline">Home</NavLink>
        </li>

        <!-- Iterating through Segments -->
        @foreach (var segment in Segments)
        {
            <li class="flex items-center space-x-2">
                <span class="mx-1">/</span>

                <!-- If it's the last segment, just display the label as text -->
                @if (segment.IsLast)
                {
                    <span class="text-gray-400 capitalize">@segment.Label</span>
                }
                else
                {
                    <!-- If not the last segment, create a clickable NavLink -->
                    <NavLink href="@segment.Url" class="text-yellow-400 hover:underline capitalize">
                        @segment.Label
                    </NavLink>
                }
            </li>
        }
    </ol>
</nav>

@code {
    private List<BreadcrumbSegment> Segments = new();  // List of breadcrumb segments

    // Initialize breadcrumb segments based on the current URL
    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);  // Get current URL
        var segments = uri.AbsolutePath.Trim('/').Split('/', StringSplitOptions.RemoveEmptyEntries);  // Split URL into path segments

        // Iterate through segments and construct breadcrumb items
        for (int i = 0; i < segments.Length; i++)
        {
            var url = "/" + string.Join("/", segments.Take(i + 1));  // Construct URL for each segment
            Segments.Add(new BreadcrumbSegment
            {
                Label = Uri.UnescapeDataString(segments[i]),  // Decode the URL segment (e.g., spaces to spaces)
                Url = url,  // The full URL for this segment
                IsLast = i == segments.Length - 1  // Mark if this is the last segment
            });
        }
    }

    // Internal class representing a breadcrumb segment
    private class BreadcrumbSegment
    {
        public string Label { get; set; } = "";  // The label to display for this segment
        public string Url { get; set; } = "";  // The URL of the segment
        public bool IsLast { get; set; }  // Flag to indicate if this is the last segment
    }
}
