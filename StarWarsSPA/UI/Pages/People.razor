@page "/characters"
@using StarWarsSPA.UI.Components
@using StarWarsSPA.Presentation.ViewModels
@using StarWarsSPA.Core.Interfaces
@inject PeopleViewModel ViewModel
@inject ISwapiService swapiService

<PageTitle>Characters</PageTitle>

<!-- Background container with gradient theme -->
<div class="min-h-screen bg-gradient-to-b from-gray-950 via-black to-gray-900 text-white px-4 py-6">

    <BreadCrumbs />

    <!-- Page heading -->
    <h1 class="text-4xl font-bold text-yellow-400 text-center mb-6">Characters</h1>

    <!-- Search input triggers filtering -->
    <SearchBar OnSearch="ViewModel.HandleSearch" Placeholder="Search characters..." />

    @if (ViewModel.Loading)
    {
        <!-- Loading state -->
        <p class="text-center mt-10 text-gray-400">Loading characters...</p>
    }
    else if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <p class="text-center mt-10 text-yellow-400 font-semibold">@ViewModel.ErrorMessage</p>
    }
    else
    {
        <!-- Grid of character cards -->
        <div class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-8">
            @foreach (var person in ViewModel.PaginatedPeople)
            {
                // Extract character ID from URL
                var id = person?.Url?.Split('/', StringSplitOptions.RemoveEmptyEntries).Last();
                <a href="/characters/@id" class="bg-black bg-opacity-60 border border-yellow-400 rounded-xl p-4 hover:shadow-yellow-500/50 transition-shadow">
                    <h2 class="text-xl font-semibold text-yellow-300 mb-2">@person?.Name</h2>
                    <ul class="text-sm space-y-1 text-gray-300">
                        <li><span class="font-bold">Height:</span> @(person?.Height ?? "n/a") cm</li>
                        <li><span class="font-bold">Mass:</span> @(person?.Mass ?? "n/a") kg</li>
                        <li><span class="font-bold">Gender:</span> @(person?.Gender ?? "n/a")</li>
                        <li><span class="font-bold">Birth Year:</span> @(person?.BirthYear ?? "n/a")</li>
                    </ul>
                </a>
            }
        </div>

        <!-- Pagination controls -->
        @if (ViewModel?.TotalPages > 1)
        {
            <div class="mt-10 flex justify-center items-center gap-4 text-yellow-300">
                <button @onclick="ViewModel.GoToPreviousPage"
                        disabled="@(ViewModel.IsFirstPage)"
                        class="px-4 py-2 bg-yellow-600 rounded-lg disabled:opacity-30 hover:bg-yellow-500 transition">
                    Prev
                </button>
                <span class="text-white">Page @ViewModel.CurrentPage of @ViewModel.TotalPages</span>
                <button @onclick="ViewModel.GoToNextPage"
                        disabled="@(ViewModel.IsLastPage)"
                        class="px-4 py-2 bg-yellow-600 rounded-lg disabled:opacity-30 hover:bg-yellow-500 transition">
                    Next
                </button>
            </div>
        }

    }
</div>

@code {
    // Load characters on component initialization
    protected override async Task OnInitializedAsync()
    {
        ViewModel = new PeopleViewModel(swapiService);
        await ViewModel.InitializeAsync();
    }
}
