@page "/films"
@using StarWarsSPA.UI.Components
@using StarWarsSPA.Presentation.ViewModels
@using StarWarsSPA.Core.Interfaces
@inject FilmViewModel ViewModel
@inject ISwapiService swapiService

<PageTitle>Films</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-gray-950 via-black to-gray-900 text-white p-6">
    <BreadCrumbs />

    <h1 class="text-4xl font-bold text-yellow-400 text-center mb-6">Star Wars Films</h1>

    <div class="flex justify-center mb-6">
        <!-- SearchBar triggers HandleSearch to filter films -->
        <SearchBar OnSearch="ViewModel.HandleSearch" Placeholder="Search films..." />
    </div>

    @if (ViewModel.Loading)
    {
        <!-- Show loading state -->
        <p class="text-center mt-10 text-gray-400">Loading films...</p>
    }
    else
    {
        <!-- Display list of films -->
        <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-6 mt-8">
            @foreach (var film in ViewModel.PaginatedFilms)
            {
                // Extract ID from URL for navigation
                var id = film.Url?.Split("/").Last();
                <NavLink href="@($"/films/{id}")" class="bg-black bg-opacity-60 border border-yellow-400 rounded-xl p-4 hover:shadow-yellow-500/40 transition-shadow">
                    <h2 class="text-xl font-bold text-yellow-300 mb-2">@((film.Title ?? "n/a"))</h2>
                    <p class="text-sm text-gray-300"><span class="text-yellow-400 font-medium">Episode:</span> @film.EpisodeId</p>
                    <p class="text-sm text-gray-300"><span class="text-yellow-400 font-medium">Director:</span> @(film.Director ?? "n/a")</p>
                    <p class="text-sm text-gray-300"><span class="text-yellow-400 font-medium">Release Date:</span> @(film.ReleaseDate ?? "n/a")</p>
                </NavLink>
            }
        </div>

        <!-- Pagination controls -->
        @if (ViewModel?.TotalPages > 1)
        {
            <div class="mt-10 flex justify-center items-center gap-4 text-yellow-300">
                <button @onclick="() => ViewModel.CurrentPage--"
                        disabled="@(ViewModel.CurrentPage == 1)"
                        class="px-4 py-2 bg-yellow-600 rounded-lg disabled:opacity-30 hover:bg-yellow-500 transition">
                    Prev
                </button>
                <span class="text-white">Page @ViewModel.CurrentPage of @ViewModel.TotalPages</span>
                <button @onclick="() => ViewModel.CurrentPage++"
                        disabled="@(ViewModel.CurrentPage == ViewModel.TotalPages)"
                        class="px-4 py-2 bg-yellow-600 rounded-lg disabled:opacity-30 hover:bg-yellow-500 transition">
                    Next
                </button>
            </div>
        }
    }
</div>

@code {
    // Load films when component is initialized
    protected override async Task OnInitializedAsync()
    {
        ViewModel = new FilmViewModel(swapiService);
        await ViewModel.InitializeAsync();
    }
}
